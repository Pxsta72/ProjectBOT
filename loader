--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==5) then v16=nil;function v16(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v39)if (v2(v39,2)==79) then v28=v1(v4(v39,1,1));return "";else local v77=v3(v1(v39,16));if v28 then local v83=v6(v77,v28);v28=nil;return v83;else return v77;end end end);local function v29(v40,v41,v42)if v42 then local v78=(v40/((2 -0)^(v41-1)))%((7 -5)^(((v42-(1 + 0)) -(v41-(1 + 0))) + 1 + 0 + 0)) ;return v78-(v78%1) ;else local v79=(1 + 1)^(v41-(945 -(791 + 153))) ;return (((v40%(v79 + v79))>=v79) and ((1082 -(1071 + 9)) -1)) or (0 -0) ;end end local function v30()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v31()local v48,v49=v2(v25,v27,v27 + 2 );v27=v27 + (142 -(33 + 107)) ;return (v49 * (230 + 26)) + v48 ;end local function v32()local v50,v51,v52,v53=v2(v25,v27,v27 + 1 + 2 );v27=v27 + 4 ;return (v53 * (12053337 + 4723879)) + (v52 * (21078 + 44458)) + (v51 * (78 + 178)) + v50 ;end local function v33()local v54=v32();local v55=v32();local v56=1 + 0 + (0 -0) ;local v57=(v29(v55,508 -((1520 -1077) + 64) ,39 -(91 -72) ) * ((1 + 1)^(15 + (64 -47)))) + v54 ;local v58=v29(v55,14 + 7 ,44 -13 );local v59=((v29(v55,19 + 13 )==(1 + 0)) and  -(405 -(165 + 239))) or 1 ;if (v58==(0 + 0)) then if (v57==(0 + 0)) then return v59 * (487 -(189 + 298)) ;else v58=2 -1 ;v56=0 + 0 ;end elseif (v58==2047) then return ((v57==(0 + 0)) and (v59 * ((1 + 0)/((0 + 0) -0)))) or (v59 * NaN) ;end return v9(v59,v58-((6351 -3338) -1990) ) * (v56 + (v57/((1176 -((2867 -1709) + 16))^(126 -74)))) ;end local function v34(v43)local v60;if  not v43 then v43=v32();if (v43==(0 -0)) then return "";end end v60=v4(v25,v27,(v27 + v43) -(1512 -(1249 + 262)) );v27=v27 + v43 ;local v61={};for v75=1, #v60 do v61[v75]=v3(v2(v4(v60,v75,v75)));end return v7(v61);end local v35=v32;local function v36(...)return {...},v13("#",...);end local function v37()local v62=1962 -(987 + 975) ;local v63;local v64;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (1==v62) then v65=nil;v66=nil;v62=5 -3 ;end if (v62==(0 -0)) then v63=0;v64=nil;v62=1;end if (2==v62) then v67=nil;v68=nil;v62=3;end if ((11 -7)==v62) then while true do if (v63==(1 + 1)) then local v89=0;while true do if (v89==(0 + 0)) then v68=nil;v69=nil;v89=1;end if ((815 -(324 + 490))~=v89) then else v63=3;break;end end end if (v63==(606 -(226 + 377))) then v70=nil;while true do local v92=1732 -(1098 + 634) ;while true do if (v92==(1 + 0)) then if (v64==2) then local v111=0;while true do if (v111==1) then for v119=1,v32() do local v120=0 -0 ;local v121;local v122;local v123;local v124;while true do if (v120==0) then v121=0;v122=nil;v120=1 + 0 ;end if (v120~=(1 + 0)) then else v123=nil;v124=nil;v120=3 -1 ;end if (v120~=(2 + 0)) then else while true do if (v121==0) then v122=0;v123=nil;v121=1;end if (v121~=(1291 -(495 + 795))) then else v124=nil;while true do if (v122==(3 -2)) then while true do if (v123==(0 -0)) then v124=v30();if (v29(v124,1,1)~=0) then else local v233=0;local v234;local v235;local v236;local v237;local v238;while true do if (v233==(1 + 0)) then v236=nil;v237=nil;v233=2;end if (2==v233) then v238=nil;while true do if ((1 + 1)==v234) then while true do if (v235==(913 -(103 + 810))) then local v277=1595 -(8 + 1587) ;local v278;local v279;while true do if (v277==1) then while true do if (v278==(1274 -(1194 + 80))) then v279=0 + 0 ;while true do if (v279~=0) then else local v299=0;while true do if (v299==(2 -1)) then v279=1164 -(386 + 777) ;break;end if (v299==0) then v236=v29(v124,2,3);v237=v29(v124,4,6);v299=1;end end end if (v279==1) then v235=462 -(434 + 27) ;break;end end break;end end break;end if (v277==0) then v278=0 + 0 ;v279=nil;v277=838 -(620 + 217) ;end end end if (v235==(7 -5)) then local v280=861 -(512 + 349) ;local v281;while true do if (v280==(0 + 0)) then v281=0 -0 ;while true do if ((834 -(306 + 527))~=v281) then else v235=7 -4 ;break;end if (v281==0) then local v293=0 + 0 ;local v294;while true do if (v293==0) then v294=139 -(16 + 123) ;while true do if (v294==1) then v281=1 + 0 ;break;end if (0==v294) then if (v29(v237,1 + 0 ,1)~=(1 + 0)) then else v238[2]=v70[v238[1233 -(1142 + 89) ]];end if (v29(v237,2,2)==1) then v238[2 + 1 ]=v70[v238[3]];end v294=78 -(5 + 72) ;end end break;end end end end break;end end end if (v235==3) then if (v29(v237,3,4 -1 )~=1) then else v238[3 + 1 ]=v70[v238[4]];end v65[v119]=v238;break;end if (1~=v235) then else local v283=0;local v284;while true do if ((1035 -(488 + 547))==v283) then v284=0;while true do if (v284==(1754 -(1244 + 510))) then v238={v31(),v31(),nil,nil};if (v236==0) then local v295=0 -0 ;local v296;local v297;while true do if (0==v295) then v296=0;v297=nil;v295=1;end if (v295~=(1 + 0)) then else while true do if (v296==0) then v297=1825 -(1016 + 809) ;while true do if (v297~=(1497 -(991 + 506))) then else v238[3 + 0 ]=v31();v238[13 -9 ]=v31();break;end end break;end end break;end end elseif (v236==1) then v238[3]=v32();elseif (v236==2) then v238[3]=v32() -(2^(45 -29)) ;elseif (v236~=(3 + 0)) then else local v306=0 -0 ;local v307;while true do if (v306~=0) then else v307=788 -(515 + 273) ;while true do if (v307~=(0 + 0)) then else v238[3]=v32() -(2^(28 -12)) ;v238[12 -8 ]=v31();break;end end break;end end end v284=1;end if ((1 + 0)~=v284) then else v235=2;break;end end break;end end end end break;end if ((610 -(7 + 602))==v234) then local v270=0 -0 ;while true do if (v270==(562 -(291 + 271))) then v237=nil;v238=nil;v270=1;end if (v270~=(2 -1)) then else v234=2;break;end end end if (v234~=0) then else local v271=1220 -(564 + 656) ;while true do if (v271==0) then v235=1399 -(327 + 1072) ;v236=nil;v271=1;end if (v271==1) then v234=1;break;end end end end break;end if (v233~=(1664 -(683 + 981))) then else local v256=0 -0 ;while true do if (1~=v256) then else v233=1;break;end if (v256~=(0 -0)) then else v234=1160 -(584 + 576) ;v235=nil;v256=2 -1 ;end end end end end break;end end break;end if (v122~=(1926 -(156 + 1770))) then else v123=0;v124=nil;v122=104 -(58 + 45) ;end end break;end end break;end end end v64=3;break;end if (v111~=0) then else for v125=1 -0 ,v69 do local v126=0 + 0 ;local v127;local v128;local v129;local v130;while true do if (v126==0) then v127=0 -0 ;v128=nil;v126=2 -1 ;end if (v126~=(1 + 1)) then else while true do if (1~=v127) then else v130=nil;while true do if (v128~=1) then else if (v129==1) then v130=v30()~=(1245 -(511 + 734)) ;elseif (v129==(1 + 1)) then v130=v33();elseif (v129==(1 + 2)) then v130=v34();end v70[v125]=v130;break;end if (v128~=0) then else local v209=0;while true do if (1~=v209) then else v128=1;break;end if (v209==0) then v129=v30();v130=nil;v209=1 + 0 ;end end end end break;end if (v127==(0 -0)) then local v192=0;while true do if (v192~=0) then else v128=1929 -(682 + 1247) ;v129=nil;v192=3 -2 ;end if (v192~=(2 -1)) then else v127=1;break;end end end end break;end if ((1 + 0)~=v126) then else v129=nil;v130=nil;v126=2;end end end v68[5 -2 ]=v30();v111=1;end end end if (v64~=1) then else local v112=0;while true do if (v112~=(1845 -(1301 + 543))) then else v70={};v64=2;break;end if (v112~=0) then else v68={v65,v66,nil,v67};v69=v32();v112=1;end end end break;end if (v92==0) then if (v64~=3) then else local v113=1365 -(621 + 744) ;while true do if (0==v113) then for v131=1,v32() do v66[v131-(1 -0) ]=v37();end for v133=843 -(76 + 766) ,v32() do v67[v133]=v32();end v113=1;end if (v113==(720 -(601 + 118))) then return v68;end end end if (v64==0) then local v114=1769 -(1298 + 471) ;local v115;while true do if (v114==(0 -0)) then v115=0 + 0 ;while true do if (v115==(1432 -(579 + 852))) then v67={};v64=730 -(681 + 48) ;break;end if (v115~=0) then else v65={};v66={};v115=496 -(410 + 85) ;end end break;end end end v92=1 + 0 ;end end end break;end if (v63==(1 + 0)) then local v90=0;while true do if (v90==(730 -(573 + 157))) then v66=nil;v67=nil;v90=1 + 0 ;end if ((1 -0)==v90) then v63=2;break;end end end if (v63==0) then local v91=0;while true do if (v91~=0) then else v64=0;v65=nil;v91=1;end if (v91==1) then v63=1;break;end end end end break;end if (v62==3) then v69=nil;v70=nil;v62=4 + 0 ;end end end local function v38(v44,v45,v46)local v71=0;local v72;local v73;local v74;while true do if (v71==1) then v74=v44[3];return function(...)local v84=1;local v85= -1;local v86={...};local v87=v13("#",...) -1 ;local function v88()local v93=v72;local v94=v73;local v95=v74;local v96=v36;local v97={};local v98={};local v99={};for v104=0,v87 do if ((3976==3976) and (v104>=v95)) then v97[v104-v95 ]=v86[v104 + ((871 -(313 + 104)) -(413 + 40)) ];else v99[v104]=v86[v104 + 1 ];end end local v100=(v87-v95) + 1 + 0 ;local v101;local v102;while true do local v105=0 -0 ;while true do if (((14107 -11074)<=3576) and (v105==(1621 -(393 + 931 + 296)))) then if ((v102<=(8 + 4)) or ((1754 + 741 + 716)>=(1794 + 2735))) then if ((v102<=(4 + 1)) or (1691>=(4694 -1603))) then if (((13960 -(21973 -11781))>=(3530 -2218)) and (v102<=(1036 -(289 + 745)))) then if (((3440 -(801 + 1130))<((797 -(23 + 2)) + 1887)) and (v102<=(416 -(204 + 212)))) then local v135=1885 -(1794 + 91) ;local v136;local v137;local v138;local v139;local v140;while true do if ((1380<=(4109 -(110 + 374))) and (v135==((1910 -(269 + 1640)) + 1))) then v140=nil;while true do if ((((2525 -(837 + 333)) + 481)>(4 + 26 + 185)) and ((1242 -(426 + 816))==v136)) then v137=v101[2];v138,v139=v96(v99[v137](v14(v99,v137 + (4 -3) ,v101[1 + 2 ])));v136=1 -0 ;end if ((2==v136) or ((14967 -10623)<1692)) then for v212=v137,v85 do local v213=0;local v214;while true do if ((v213==(0 + 0)) or ((2134 -(1171 + 566))>=(110 + 2775))) then v214=0 + 0 ;while true do if (((176 -(21 + 11))==(34 + 110)) and (v214==((30 + 35) -(28 + 37)))) then v140=v140 + (203 -(9 + 193)) ;v99[v212]=v138[v140];break;end end break;end end end break;end if ((v136==((1139 -568) -(29 + 541))) or (3925==(6967 -4698))) then local v211=0 + 0 ;while true do if ((v211==0) or ((522 + 654)>(7817 -3133))) then v85=(v139 + v137) -(1 + 0) ;v140=0 + 0 ;v211=1;end if (((1379 + 1942)==(8358 -5037)) and (v211==(807 -(321 + 485)))) then v136=(981 -454) -((1693 -(1527 + 136)) + (2254 -1759)) ;break;end end end end break;end if ((v135==(713 -(39 + 673))) or (1895<=883)) then v138=nil;v139=nil;v135=3 -(2 -1) ;end if (((7876 -5926)==(3782 -(21 + 1811))) and (v135==(0 -0))) then v136=0 + 0 ;v137=nil;v135=1;end end elseif (((5068 -(345 + 880))==(1260 + (4334 -(190 + 1561)))) and (v102==((1706 -(708 + 996)) -1))) then v99[v101[(1220 -(1028 + 191)) + 1 ]]=v99[v101[(366 -(188 + 175)) + 0 ]][v101[1 + 3 ]];else local v147=0 + 0 ;local v148;while true do if ((v147==(0 + 0)) or ((2866 -1962)>(5446 -(194 + 617)))) then v148=v101[3 -1 ];v99[v148]=v99[v148](v99[v148 + (1 -0) ]);break;end end end elseif ((v102<=3) or ((3824 -1377)>=(259 + 4282))) then do return;end elseif ((v102>(1 + (9 -6))) or (3649<3115)) then v99[v101[2]]=v38(v94[v101[6 -3 ]],nil,v46);else local v150=0 -0 ;local v151;local v152;local v153;local v154;local v155;while true do if ((2==v150) or ((3217 -(1027 + 595))>(11505 -8887))) then v155=nil;while true do if ((v151==0) or ((2700 + 1656)<(1387 -(304 + 481)))) then local v215=0;while true do if (((7120 -5303)<=3478) and (v215==(0 + 0))) then local v239=0 + 0 ;while true do if ((v239==1) or ((13726 -8885)<(2526 + 1223))) then v215=3 -2 ;break;end if ((v239==(0 -0)) or (3022<(1573 + 369))) then v152=v101[4 -2 ];v153,v154=v96(v99[v152](v99[v152 + 1 ]));v239=1 + 0 ;end end end if ((2466==(3941 -(413 + 1062))) and (v215==(1 -0))) then v151=1957 -(1897 + (250 -(93 + 98))) ;break;end end end if (((63 -(51 + 11))==v151) or ((15270 -10957)<(2372 -869))) then local v216=0 + 0 ;while true do if (((1616 + 868)<=(3741 -(745 + 37))) and (v216==(1919 -(904 + 441 + 573)))) then v151=(1450 + 395) -(939 + 904) ;break;end if (((3181 -(6 + 4 + 15))>(114 + 5 + 429)) and ((1603 -(1059 + 544))==v216)) then v85=(v154 + v152) -(1 + 0) ;v155=0 + 0 ;v216=1 + 0 ;end end end if ((v151==(9 -7)) or ((5766 -(413 + 1064))<((21435 -7890) -10277))) then for v222=v152,v85 do local v223=0 + 0 ;local v224;while true do if (((5281 -(1115 + 509))>((763 -380) + 282)) and ((0 + 0)==v223)) then v224=570 -(347 + 223) ;while true do if ((v224==((0 -0) + 0)) or ((4418 -(1643 + 284))>(5248 -((305 -190) + 279)))) then v155=v155 + 1 ;v99[v222]=v153[v155];break;end end break;end end end break;end end break;end if ((v150==(1356 -(846 + 509))) or ((2866 -(88 + 248))==(2887 -(707 + 16)))) then local v198=0 -0 ;while true do if (((1 -0)==v198) or ((6379 -3697)<(391 + 146))) then v150=2 + 0 ;break;end if ((v198==((58 -(48 + 10)) -0)) or ((7034 -2904)<(1937 + 2117))) then v153=nil;v154=nil;v198=3 -(1656 -(693 + 961)) ;end end end if ((v150==0) or (4803<3191)) then local v199=0;while true do if ((v199==1) or (((226 -158) + 578)>(7412 -3189))) then v150=48 -(11 + 36) ;break;end if ((v199==(0 + 0 + 0)) or ((4236 -3342)>2030)) then v151=0 -0 ;v152=nil;v199=1 -0 ;end end end end end elseif ((1411<=(3380 -(1490 + 253))) and (v102<=(1981 -(35 + 1938)))) then if (((569 + 2460)>=366) and (v102<=(5 + 1))) then if (((6266 -2803)>(3886 -(557 + 585))) and (v99[v101[2 + 0 ]]==v101[2 + 2 ])) then v84=v84 + 1 + 0 ;else v84=v101[369 -(357 + 9) ];end elseif ((v102==(24 -17)) or (((3308 -(224 + 638)) -(693 + 73 + 1150))>=(1806 + 2291))) then local v157=250 -(205 + 45) ;local v158;local v159;local v160;local v161;while true do if (((3490 -(525 + 482))>=2305) and (v157==0)) then v158=1441 -(613 + 828) ;v159=nil;v157=2 -1 ;end if ((v157==(1219 -(481 + 737))) or ((5562 -(1103 + 140))<=239)) then v160=nil;v161=nil;v157=(3179 -1493) -(221 + 1463) ;end if ((v157==2) or (((939 + 1400) -(117 + 982))>=(2564 -943))) then while true do if (((1335 + 1347)<(4749 -((979 -(325 + 644)) + 909))) and (v158==(1 -0))) then local v217=0 + 0 + (1582 -(1246 + 336)) ;while true do if ((v217==(0 + 0)) or (3007>(3803 + 456))) then v161={};v160=v11({},{__index=function(v243,v244)local v250=0;local v251;local v252;local v253;while true do if ((v250==(1 + 0)) or (((2682 -1016) -(22 + 19 + 1596))>((1916 + 6259) -3565))) then v253=nil;while true do if (((0 + 0)==v251) or ((173 + 325)==(3524 -(1519 + 189)))) then v252=0;v253=nil;v251=1 + 0 ;end if (((3106 -1666)<(4820 -(117 + 369))) and (v251==(2 -1))) then while true do if (((2854 + 1328)>=(170 + 322)) and (v252==(850 -(596 + 254)))) then local v288=0 + 0 ;while true do if ((v288==0) or ((9525 -(3103 + 3339))<(844 -520))) then local v292=0 -(954 -(388 + 566)) ;while true do if (((3735 -2962)<(1183 + (1105 -813))) and ((0 -(0 + 0))==v292)) then v253=v161[v244];return v253[2 -1 ][v253[2]];end end end end end end break;end end break;end if ((v250==0) or ((3258 -1779)>=(243 + (4485 -2714)))) then v251=0 -0 ;v252=nil;v250=836 -((1695 -(609 + 258)) + 7) ;end end end,__newindex=function(v245,v246,v247)local v254=885 -(139 + 746) ;local v255;while true do if ((v254==(963 -(184 + 779))) or ((2046 + 1726)<=(54 + 692))) then v255=v161[v246];v255[1 + 0 ][v255[1 + 1 ]]=v247;break;end end end});v217=3 -2 ;end if ((v217==(1 + 0)) or ((2886 + 511)<=(3337 -1929))) then v158=2;break;end end end if (((714 + 40 + 347)==(2290 -(1023 + 166))) and ((1252 -(289 + 963))==v158)) then v159=v94[v101[3]];v160=nil;v158=1 -0 ;end if (((2114 -(324 + 319))<=(3979 -(1320 + 267))) and (v158==(389 -(270 + 117)))) then for v225=1,v101[1 + 3 ] do local v226=0 -0 ;local v227;local v228;while true do if (((444 + 1243)>(5 + 215)) and (v226==(0 + 0))) then v227=0 -0 ;v228=nil;v226=1 + 0 ;end if (((657 -201)==(1330 -(261 + 613))) and (v226==(1051 -(466 + (2287 -(1587 + 116)))))) then while true do if (((4118 -1530)>(2217 -(22 + 30))) and (v227==(651 -(572 + 79)))) then v84=v84 + (3 -2) + 0 ;v228=v93[v84];v227=1 + 0 ;end if (((6345 -(1679 + 1158))>(3659 -2076)) and (1==v227)) then if ((v228[79 -(51 + 27) ]==(28 -12)) or ((3362 -(8 + 60 + 955))>=3699)) then v161[v225-(1787 -(1379 + 407)) ]={v99,v228[6 -3 ]};else v161[v225-(1185 -(1115 + 69)) ]={v45,v228[6 -3 ]};end v98[ #v98 + 1 + 0 ]=v161;break;end end break;end end end v99[v101[1 + 1 + 0 ]]=v38(v159,v160,v46);break;end end break;end end else local v162=0 + 0 ;local v163;while true do if ((((3166 -(400 + 135)) -((1317 -804) + 865))<(6689 -3037)) and (v162==0)) then v163=v101[2 + 0 ];v99[v163](v99[v163 + (1 -0) ]);break;end end end elseif ((((1011 + 2328) -(591 + 191))>=(402 + 906)) and (v102<=(30 -20))) then if ((((3271 -1455) + 682)<(2255 + 1550)) and (v102==(920 -(78 + 833)))) then v99[v101[3 -1 ]]();else v99[v101[2 + 0 ]][v101[5 -2 ]]=v99[v101[4 + 0 ]];end elseif (((2898 + 891)>((541 -(245 + 45)) + 508)) and (v102==11)) then v99[v101[2 + 0 ]]=v101[3];else v99[v101[3 -1 ]][v101[1 + 2 ]]=v101[4 + 0 ];end elseif ((v102<=(1 + 17)) or ((542 + 2688)==(410 + 1590))) then if ((1119<(46 + 2374 + 160)) and (v102<=(471 -(29 + 427)))) then if ((v102<=13) or ((998 + 1300)<(4371 -2132))) then if (((1215 + 1545)>=(24 + 502)) and v99[v101[2 + 0 ]]) then v84=v84 + (2 -1) ;else v84=v101[3];end elseif ((v102==((600 -(115 + 83)) -(370 + (36 -(15 + 3))))) or (((6939 -4160) -(1701 + 16))>=(5146 -3845))) then v84=v101[2 + 1 ];else local v172=0 + 0 ;local v173;while true do if (((4653 -2819)<(4284 -(1136 + 862))) and (v172==(0 -(0 + 0)))) then v173=v101[1990 -(861 + 1127) ];v99[v173]=v99[v173](v14(v99,v173 + (1195 -(734 + 460)) ,v85));break;end end end elseif ((v102<=(637 -(248 + 373))) or (((13497 -8645) -3033)>=(15358 -11969))) then v99[v101[2]]=v99[v101[3]];elseif (((779 + 774)==(494 + 1059)) and (v102==17)) then local v174=0 + 0 ;local v175;local v176;while true do if ((4131<=(17680 -12916)) and ((1 -0)==v174)) then while true do if ((2925<=(2057 + 1538)) and (v175==(0 -0))) then v176=v101[2 + 0 + 0 ];v99[v176](v14(v99,v176 + (1618 -(633 + 984)) ,v101[3 + 0 ]));break;end end break;end if ((0==v174) or ((4857 -(821 + 308))>(5550 -(39 + 857)))) then v175=0;v176=nil;v174=1 -0 ;end end else v99[v101[2]]=v46[v101[3]];end elseif (((284 + 217)<=((5682 -2756) + 1862)) and (v102<=(14 + 7))) then if ((v102<=(1627 -(646 + 962))) or ((5725 -2049)<=(3625 -1839))) then v46[v101[3]]=v99[v101[(182 -(63 + 117)) -(863 -(87 + 776)) ]];elseif (((12543 -8677)>((869 -622) + 1056)) and (v102>(32 -12))) then if (((679 + 2583 + 1497)==((6125 -(291 + 911)) -(137 + 27))) and (v101[2]==v99[v101[626 -(286 + 336) ]])) then v84=v84 + (2 -1) ;else v84=v101[7 -4 ];end else local v179=1507 -(551 + 956) ;local v180;local v181;while true do if ((v179==(0 -0)) or (1047>=(4876 -(479 + 138)))) then v180=v101[2];v181=v99[v101[3 + 0 ]];v179=2 -1 ;end if (((3022 -(317 + 377))>=(2567 -(1082 + 744))) and (v179==(1 + 0))) then v99[v180 + 1 + 0 ]=v181;v99[v180]=v181[v101[(1213 -(1087 + 125)) + 3 ]];break;end end end elseif ((v102<=(8 + 15)) or ((5607 -(10548 -8027))<(1727 -(411 + 1)))) then if ((v102>22) or (4199==(7643 -(2853 + 2897)))) then local v182=(259 + 503) -(627 + 135) ;local v183;local v184;local v185;while true do if ((((302 + 422) -449)<=440) and ((2 -1)==v182)) then v185=nil;while true do if (((4850 -(84 + 190))==(16652 -12076)) and ((3 -2)==v183)) then while true do if ((v184==0) or ((5335 -1994)<=(718 -(569 + 14)))) then v185=v101[4 -2 ];v99[v185]=v99[v185](v14(v99,v185 + 1 ,v101[901 -(358 + 540) ]));break;end end break;end if (((639 + 3334)>(643 + 1124)) and (0==v183)) then v184=1132 -(508 + 624) ;v185=nil;v183=1 + 0 ;end end break;end if ((v182==(0 -0)) or (2031>(5413 -2064))) then v183=0 + 0 ;v184=nil;v182=(2 -0) -1 ;end end else local v186=0 -0 ;local v187;local v188;local v189;while true do if (((1516 -757)==759) and (v186==(1518 -(788 + 730)))) then v187=0 + 0 ;v188=nil;v186=2 -1 ;end if (((6046 -(894 + 195))==((50909 -31772) -14180)) and (v186==(1 + 0 + 0))) then v189=nil;while true do if ((v187==1) or (1803<=(6871 -5405))) then for v229=1, #v98 do local v230=0;local v231;local v232;while true do if ((v230==(0 -0)) or ((1872 -(672 + 1194))==(2854 -(55 + 1449)))) then v231=0 -0 ;v232=nil;v230=1 + 0 ;end if ((2280<=2460) and (1==v230)) then while true do if ((v231==(0 + 0)) or (((1614 + 849) -(342 + 172))>=(1399 + 916))) then v232=v98[v229];for v265=1019 -(392 + 627) , #v232 do local v266=566 -(414 + 152) ;local v267;local v268;local v269;while true do if ((v266==(1 + 0)) or ((4636 -(550 + 1334))>(3980 -881))) then v269=v267[5 -3 ];if (((v268==v99) and (v269>=v188)) or ((6562 -2903)<=234)) then local v285=916 -(232 + 684) ;while true do if ((v285==0) or (4778<2130)) then v189[v269]=v268[v269];v267[1 + 0 ]=v189;break;end end end break;end if (((3365 -(300 + 360))<(8830 -5658)) and (v266==0)) then v267=v232[v265];v268=v267[1402 -(618 + 783) ];v266=1 + 0 ;end end end break;end end break;end end end break;end if (((4124 -(1136 + 134))<(2083 + 1175)) and (v187==(0 -0))) then local v221=0 -0 ;while true do if (((4938 -(115 + 1269))<=(11988 -7046)) and ((3 -2)==v221)) then v187=858 -(848 + 9) ;break;end if (((14060 -10651)>(1876 -((2322 -728) + 11))) and (v221==0)) then v188=v101[227 -(110 + 115) ];v189={};v221=3 -2 ;end end end end break;end end end elseif ((v102==(50 -26)) or (2157==1540)) then for v193=v101[2 + 0 ],v101[7 -(4 + 0) ] do v99[v193]=nil;end else v99[v101[3 -1 ]]=v45[v101[1484 -(1274 + 207) ]];end v84=v84 + (1 -0) ;break;end if ((v105==(0 -0)) or ((2301 -(116 + 1638))>=921)) then local v110=1412 -(715 + 697) ;while true do if ((v110==((43 -(30 + 13)) -0)) or (2281<=(1181 -(986 + 159)))) then v101=v93[v84];v102=v101[1 -0 ];v110=1 + 0 ;end if ((4511>=(415 -(105 + (47 -27)))) and (v110==(2 -1))) then v105=1;break;end end end end end end A,B=v36(v12(v88));if  not A[1] then local v103=v44[4][v84] or "?" ;error("Script error at ["   .. v103   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end if (v71==0) then v72=v44[1];v73=v44[2];v71=1;end end end return v38(v37(),{},v26)(...);end vv10(),...);break;end if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end end end
