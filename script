local Bot = game.Players.localPlayer

local ScriptStuff = {
    whitelist = {}
}

GlobalWhitelist = {
    "Normalkid20015_72"
}

function ScriptStuff.whitelistAdd()
    for k, v in pairs(GlobalWhitelist) do
        table.insert(ScriptStuff.whitelist, v)
    end
end

local ChatRemote = game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
local busy = false
local private = false
local safe = true
local stop = false
local CarSpeed = 20
local FlySpeed = 9

function whitelisted(player)
    for k, v in pairs(ScriptStuff.whitelist) do
        if v == player then
            return true
        end
    end
    return false
end

for _,v in pairs(getgc(true)) do
    if typeof(v) == "table" then
        if rawget(v, 'Ragdoll') then 
            v.Ragdoll = function(...) 
                return wait(9e9) 
            end
        end
    end
end


function chat(message)
    if private then
        for k, v in pairs(game.Players:getPlayers()) do
            if whitelisted(v.Name) then
                ChatRemote:FireServer("/W "..v.Name.." [epic bot] "..message, "All")
            end
        end
    else
        ChatRemote:FireServer("[epic bot] "..message, "All")
    end

    print(message)
end

Positions = {
    Vector3.new(-1099, 500, -1378),
    Vector3.new(-1544, 500, 719),
    Vector3.new(740, 500, 1062)
}
local rayOrigin = Vector3.new(0, 0, 0)
local rayDirection = Vector3.new(0, -100, 0)

local raycastParams = RaycastParams.new()
raycastParams.FilterDescendantsInstances = {script.Parent}
raycastParams.FilterType = Enum.RaycastFilterType.Exclude
raycastParams.IgnoreWater = true

function GetPos(location)
    local ClosestDistance = nil
    local MinDistance = 99999
    for k, v in pairs(Positions) do
        if (v - location).Magnitude <= MinDistance then
            MinDistance = (v - location).Magnitude
            ClosestDistance = v
        end
    end
    for k, v in pairs(game.Workspace.Vehicles:GetChildren()) do
        if v.Name == "Pickup" or v.Name == "Camaro" then
            if v.Seat.PlayerName.Value == "" then
                local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
                if raycastResult == nil then
                    if (v.Engine.Position - location).Magnitude <= MinDistance then
                        MinDistance = (v.Engine.Position - location).Magnitude
                        ClosestDistance = v.Engine.Position
                    end
                end
            end
        end
    end
    return ClosestDistance
end

local Car
local exitCar = require(game:GetService("ReplicatedStorage").Game.CharacterUtil)

function lift(location, player, LocationName)

    if busy then
        chat("cant give you an uber right now")
        return
    end

    local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

    if raycastResult ~= nil then
        chat("cannot uber while under a roof")
        return
    end

    Car = nil
    busy = true

    for i,v in pairs(workspace.Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    if Car == nil then
        chat("getting car")
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
        wait(3)

        local args = {
        [1] = "Chassis",
        [2] = "Pickup"
        }
        game:GetService("ReplicatedStorage").GarageSpawnVehicle:FireServer(unpack(args))
    end

    wait(2)

    for i,v in pairs(workspace.Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    while Car == nil do
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
        wait(1)
        local amount = (Bot.Character.HumanoidRootPart.Position - GetPos(Bot.Character.HumanoidRootPart.Position)).magnitude / FlySpeed
        local MoveDist = (Bot.Character.HumanoidRootPart.Position - GetPos(Bot.Character.HumanoidRootPart.Position)) / amount
        for i = 1, amount, 1 do
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
            Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
            wait(0.05)
            if reset then
                return
            end
        end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 50, Bot.Character.HumanoidRootPart.CFrame.Z)

        wait(3)

        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Enter Driver" then
                v:Callback(v, true)
            end
            if v.Name == "Hijack" then
                v.Duration = 0;
                v.Timed = true;
            end
        end

        wait(0.5)
        
        for i,v in pairs(workspace.Vehicles:GetChildren()) do
            if pcall(function() return v.Seat.PlayerName end) then
                if v.Seat.PlayerName.Value == Bot.Name then
                    Car = v
                end
            end
        end

        if reset then
            return
        end
    end

    if player.Character then
        if player.Character:FindFirstChild("HumanoidRootPart") then
            chat("going to "..player.DisplayName, player)

            Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
            wait(1)
            local pos = Vector3.new(player.Character.HumanoidRootPart.Position.X, 500, player.Character.HumanoidRootPart.Position.Z)
            while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(player.Character.HumanoidRootPart.Position.X, 500, player.Character.HumanoidRootPart.Position.Z)).magnitude > 30 do
                if (pos - Vector3.new(player.Character.HumanoidRootPart.Position.X, 500, player.Character.HumanoidRootPart.Position.Z)).magnitude > 100 then 
                    chat("player moved, cancelling uber")
                    exitCar.OnJump()
                    busy = false
                    return
                end
                local amount = (Car.Engine.Position - player.Character.HumanoidRootPart.Position).magnitude / CarSpeed
                local MoveDist = (Car.Engine.Position - player.Character.HumanoidRootPart.Position) / amount
                for i = 1, amount, 1 do
                    Car.Engine.CFrame = CFrame.new(Car.Engine.Position - MoveDist)
                    Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
                    Car.Engine.Velocity = Vector3.new(0,1.005,0)
                    wait(0.05)

                    if reset then
                        return
                    end
                end
                wait()
            end
            Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 200, Car.Engine.CFrame.Z)
        else
            chat("cannot find player position")
            busy = false
            exitCar.OnJump()
            return
        end
    else
        chat("cannot find player body")
        busy = false
        exitCar.OnJump()
        return
    end

    local inCar = false
    while not inCar do
        for k, v in pairs(Car:GetChildren()) do
            if v.Name == "Passenger" then
                if v.PlayerName.Value == player.Name then
                    inCar = true
                end
            end
            if v.Name == "Seat" then
                if v.PlayerName.Value == player.Name then
                    inCar = true
                end
            end
        end
        if (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(player.Character.HumanoidRootPart.Position.X, 500, player.Character.HumanoidRootPart.Position.Z)).magnitude > 100 then
            chat("player moved, cancelling uber")
            exitCar.OnJump()
            busy = false
            return
        end
        if reset then
            exitCar.OnJump()
            return
        end
        wait(0.05)
    end

    chat("going to "..LocationName, player)

    Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
    wait(1)
    while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - location).magnitude > 30 do 
        local amount = (Car.Engine.Position - location).magnitude / CarSpeed
        local MoveDist = (Car.Engine.Position - location) / amount
        for i = 1, amount, 1 do
            Car.Engine.CFrame = CFrame.new(Car.Engine.Position - MoveDist)
            Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
            Car.Engine.Velocity = Vector3.new(0,1.005,0)
            wait(0.01)
            if reset then
                return
            end
        end
        wait()
    end
    Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 200, Car.Engine.CFrame.Z)


    wait(5)

    exitCar.OnJump()
    busy = false
end

Locations = {
    Vector3.new(-1219, 500, -1759),
    Vector3.new(-1563, 500, 708),
    Vector3.new(-1215, 500, 2930),
    Vector3.new(92, 500, 2333),
    Vector3.new(-349, 500, 1586),
    Vector3.new(78, 500, 1321),
    Vector3.new(9, 500, 876),
    Vector3.new(1103, 139, 1286),
    Vector3.new(536, 500, -499),
    Vector3.new(473, 500, -1605),
    Vector3.new(2245, 500, -2627),
    Vector3.new(3065, 500, -4581),
    Vector3.new(-41, 500, -4664),
    Vector3.new(822, 500, -3502),
    Vector3.new(716, 500, 1075),
    Vector3.new(77, 500, -1516),
    Vector3.new(-394, 500, 1227),
    Vector3.new(-568, 500, -5777),
    Vector3.new(175, 500, 1076),
    Vector3.new(-335, 500, 2028)
}
LocationNames = {
    "prison",
    "gas station",
    "airpot",
    "power plant",
    "city crim base",
    "jewelry store",
    "bank",
    "museum",
    "tomb",
    "1m store",
    "volcano base",
    "mansion",
    "casino",
    "military base",
    "msm police base",
    "dont",
    "garage",
    "second town",
    "city police base",
    "cargo port"
}

function GetPlayerPos(name)

    local target = nil
    for k, v in pairs(game.Players:GetChildren()) do
        if string.lower(v.DisplayName) == name then
            target = v
        end
    end

    if target == nil then
        chat("cannot find player")
        return
    end

    if target.Character == nil then
        chat("player body not found")
        return
    end

    local NearestDistance = 99999
    local NearestLocation = nil

    for k, v in pairs(Locations) do
        if (v - target.Character.HumanoidRootPart.Position).magnitude < NearestDistance then
            NearestLocation = LocationNames[k]
            NearestDistance = (v - target.Character.HumanoidRootPart.Position).magnitude
        end
    end

    chat("the closest location to "..name.." is "..NearestLocation)
end

function kill(name, player)

    if busy then
        chat("cant kill player right now")
        return
    end

    Car = nil
    busy = true
    
    local target = nil
    for k, v in pairs(game.Players:GetChildren()) do
        if string.lower(v.DisplayName) == name then
            target = v
        end
    end

    if name == "close" then
        local ClosestDistance = 99999
        local ClosestCop = nil
        for k, v in pairs(game.Players:GetChildren()) do
            if v.Character then
                if v.Character:FindFirstChild("HumanoidRootPart") then
                    if v.Team.Name == "Police" then
                        if (v.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude < ClosestDistance then
                            ClosestCop = v
                            ClosestDistance = (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude
                        end
                    end
                end
            end
        end
        target = ClosestCop
    end

    if not Bot.Folder:FindFirstChild("AK47") then
        chat("bot doesnt have guns")
        busy = false
        return
    end

    if target == nil then
        chat("cannot find player")
        busy = false
        return
    end

    if target.Team.Name ~= "Police" then
        chat("not on police team")
        busy = false
        return
    end

    if target.Character.Humanoid.Health < 0 then
        chat("player is dead")
        busy = false
        return
    end

    if not target.Character then
        chat("player has no body")
        busy = false
        return
    end

    if not target.Character:FindFirstChild("HumanoidRootPart") then
        chat("player postion doesnt exist")
        busy = false
        return
    end


    for i,v in pairs(workspace.Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    for i,v in pairs(workspace.Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    if (Bot.Character.HumanoidRootPart.Position - GetPos(Bot.Character.HumanoidRootPart.Position)).magnitude < (target.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude then
        if Car == nil then
            chat("getting car")
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
            wait(3)

            local args = {
            [1] = "Chassis",
            [2] = "Pickup"
            }
            game:GetService("ReplicatedStorage").GarageSpawnVehicle:FireServer(unpack(args))
        end

        wait(2)

        for i,v in pairs(workspace.Vehicles:GetChildren()) do
            if pcall(function() return v.Seat.PlayerName end) then
                if v.Seat.PlayerName.Value == Bot.Name then
                    Car = v
                end
            end
        end

        while Car == nil do
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
            wait(1)
            local amount = (Bot.Character.HumanoidRootPart.Position - GetPos(Bot.Character.HumanoidRootPart.Position)).magnitude / FlySpeed
            local MoveDist = (Bot.Character.HumanoidRootPart.Position - GetPos(Bot.Character.HumanoidRootPart.Position)) / amount
            for i = 1, amount, 1 do
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
                Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
                wait(0.01)
                if reset then
                    return
                end
            end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 50, Bot.Character.HumanoidRootPart.CFrame.Z)

            wait(3)

            local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
            for i,v in pairs (UI.CircleAction.Specs) do
                if v.Name == "Enter Driver" then
                    v:Callback(v, true)
                end
                if v.Name == "Hijack" then
                    v.Duration = 0;
                    v.Timed = true;
                end
            end

            wait(0.5)
            
            for i,v in pairs(workspace.Vehicles:GetChildren()) do
                if pcall(function() return v.Seat.PlayerName end) then
                    if v.Seat.PlayerName.Value == Bot.Name then
                        Car = v
                    end
                end
            end

            if reset then
                return
            end
        end
    end

    chat("going to "..target.DisplayName)

    if Car == nil then
        Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
        wait(1)
        local pos = Vector3.new(target.Character.HumanoidRootPart.Position.X, 500, target.Character.HumanoidRootPart.Position.Z)
        while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(target.Character.HumanoidRootPart.Position.X, 500, target.Character.HumanoidRootPart.Position.Z)).magnitude > 30 do
            if (pos - Vector3.new(target.Character.HumanoidRootPart.Position.X, 500, target.Character.HumanoidRootPart.Position.Z)).magnitude > 100 then 
                chat("player moved too far away, stopped killing")
                exitCar.OnJump()
                busy = false
                return
            end
            local amount = (Bot.Character.HumanoidRootPart.Position - target.Character.HumanoidRootPart.Position).magnitude / FlySpeed
            local MoveDist = (Bot.Character.HumanoidRootPart.Position - target.Character.HumanoidRootPart.Position) / amount
            for i = 1, amount, 1 do
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
                Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
                wait(0.01)

                if reset then
                    return
                end
            end
            wait()
        end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
        wait(0.1)
    else
        Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
        wait(1)
        local pos = Vector3.new(target.Character.HumanoidRootPart.Position.X, 500, target.Character.HumanoidRootPart.Position.Z)
        while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(target.Character.HumanoidRootPart.Position.X, 500, target.Character.HumanoidRootPart.Position.Z)).magnitude > 30 do
            if (pos - Vector3.new(target.Character.HumanoidRootPart.Position.X, 500, target.Character.HumanoidRootPart.Position.Z)).magnitude > 100 then 
                chat("player moved too far away, stopped killing")
                exitCar.OnJump()
                busy = false
                return
            end
            local amount = (Car.Engine.Position - target.Character.HumanoidRootPart.Position).magnitude / CarSpeed
            local MoveDist = (Car.Engine.Position - target.Character.HumanoidRootPart.Position) / amount
            for i = 1, amount, 1 do
                Car.Engine.CFrame = CFrame.new(Car.Engine.Position - MoveDist)
                Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
                Car.Engine.Velocity = Vector3.new(0,1.005,0)
                wait(0.01)

                if reset then
                    return
                end
            end
            wait()
        end
        Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 300, Car.Engine.CFrame.Z)
        wait(0.1)
        exitCar.OnJump()
    end

    wait(0.5)

    chat("killing"..target.DisplayName)

    pcall(function()
        toolname = "AK47"
        if Bot.Backpack:FindFirstChild(toolname) and Bot.Character:FindFirstChild(toolname) == nil then
            local tool = Bot.Backpack:FindFirstChild(toolname)
            Bot.Character.Humanoid:EquipTool(tool)
        end
    end)

    local args = {
        [1] = true
    }

    game:GetService("Players").LocalPlayer.Folder.AK47.InventoryEquipRemote:FireServer(unpack(args))

    wait(0.3)

    mouse1press()
    while target.Character.Humanoid.Health > 0 do
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
        Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
        if (target.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude > 600 then
            chat("player moved too far away, stopped killing")
            busy = false
            return
        end
        wait(0.05)
    end
    mouse1release()

    wait(0.1)
    busy = false
end

getgenv().toggled = true

getgenv().old = getgenv().old or require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList

if getgenv().toggled then
    require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList = function(...)
        local nearestDistance, nearestEnemy = 999999, nil
        local nearestEnemyPlayer
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Team ~= game:GetService("Players").LocalPlayer.Team and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                if v.Team.Name ~= "Prisoner" then
                    if v.Character.Humanoid.Health > 0 then
                        if (v.Character.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < nearestDistance then
                            nearestDistance, nearestEnemy = (v.Character.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude, v
                            nearestEnemyPlayer = true
                        end
                    end
                end
            end
        end
        local arg = {old(...)}
        if (tostring(getfenv(2).script) == "BulletEmitter" or tostring(getfenv(2).script) == "Taser") and nearestEnemy then
            if nearestEnemyPlayer then
                arg[1] = nearestEnemy.Character.HumanoidRootPart
                arg[2] = nearestEnemy.Character.HumanoidRootPart.Position
            else
                arg[1] = nearestEnemy.HumanoidRootPart
                arg[2] = nearestEnemy.HumanoidRootPart.Position
            end
        end
        return unpack(arg)
    end
else
    require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList = getgenv().old
end

local code


function FindCode() 

    local codes = {}
    local Text = {}

    for k, v in pairs(game.Workspace.Casino.RobberyDoor.Codes:GetChildren()) do
        codes[k] = v
    end
    

    for k, v in pairs(codes) do
        local CodeKids = codes[k]:GetChildren()


        local Label = CodeKids[1]:GetChildren()[1]:GetChildren()[1]

        local MinX = -99999

        if Label.Text ~= "" then

            for k, v in pairs(CodeKids) do
                local X = v.Position.X
                Label = v:GetChildren()[1]:GetChildren()[1]

                if (X > MinX) then
                    table.insert(Text, 1, Label.Text)
                    MinX = X
                else 
                    table.insert(Text, #(Text) + 1, Label.Text)
                    PrevPlace = #(Text) + 1
                end

                if reset then
                    return
                end
            end

            code = Text[1]..Text[2]..Text[3]..Text[4]
        end
    end
    chat("casino code might be "..code, player)
end

local solving = false

function MuseumSolve()
    
    chat("solving museum puzzles")
    Door1 = game.Workspace.Museum.Puzzle1Door.Part
    Door2 = game.Workspace.Museum.Puzzle2Door.Part

    if solving then
        print("already solving puzzles")
        return
    end

    solving = true

    while Door1.Position.X < 1081 or Door2.Position.X > 1166 do
        
        for k, v in pairs(game.Workspace.Museum.Puzzle1.Spinners:GetChildren()) do
            if v.Rotation.Y ~= 52 then
                fireclickdetector(v:GetChildren()[1])
            end
        end

        for k, v in pairs(game.Workspace.Museum.Puzzle2.Pieces:GetChildren()) do
            if v.name == "2" then
                if v.Rotation ~= Vector3.new(0,-38,180) then
                    fireclickdetector(v:FindFirstChild("ClickDetector"))
                end
            end
            if v.name == "3" then
                if v.Rotation ~= Vector3.new(0,-38,0) then
                    fireclickdetector(v:FindFirstChild("ClickDetector"))
                end
            end
            if v.name == "10" then
                if v.Rotation ~= Vector3.new(0,-38,180) then
                    fireclickdetector(v:FindFirstChild("ClickDetector"))
                end
            end
            if v.name == "11" then
                if v.Rotation ~= Vector3.new(0,-38,180) then
                    fireclickdetector(v:FindFirstChild("ClickDetector"))
                end
            end
            if v.name == "12" then
                if v.Rotation ~= Vector3.new(0,-38,0) then
                    fireclickdetector(v:FindFirstChild("ClickDetector"))
                end
            end
            if v.name == "13" then
                if v.Rotation ~= Vector3.new(0,-38,90) then
                    fireclickdetector(v:FindFirstChild("ClickDetector"))
                end
            end
            if v.name == "14" then
                if v.Rotation ~= Vector3.new(0,-38,0) then
                    fireclickdetector(v:FindFirstChild("ClickDetector"))
                end
            end
            if v.name == "19" then
                if v.Rotation ~= Vector3.new(0,-38,180) then
                    fireclickdetector(v:FindFirstChild("ClickDetector"))
                end
            end
            if v.name == "20" then
                if v.Rotation ~= Vector3.new(0,-38,-90) then
                    fireclickdetector(v:FindFirstChild("ClickDetector"))
                end
            end
        end

        if reset then
            return
        end
        
        wait(0.2)
    end
    solving = false
end

hacking = false

function hackVaults()

    if hacking then
        chat("already opening vaults")
        return
    end

    hacking = true
    chat("opening vaults")

    HackingVault = false
    hacked = 0
    Rotate = true
    local VaultLight = workspace.Casino.HackableVaults.VaultDoorMain.InnerModel.Model.UnlockedLED


    while hacked < 4 do
        if not HackingVault then
            workspace.Casino.HackableVaults.VaultDoorMain.InnerModel.Puzzle.RequestHack:FireServer()
            HackingVault = true
            hacked += 1
        end
        if HackingVault then

            if VaultLight.BrickColor == BrickColor.new("Lime green") and Rotate then
                workspace.Casino.HackableVaults.VaultDoorMain.InnerModel.Puzzle.UpdateDirection:FireServer()
                hacked += 1
                Rotate = false
            end
            if VaultLight.BrickColor ~= BrickColor.new("Lime green") then
                Rotate = true
            end
            wait(0.01)
        end
        if reset then
            return
        end
    end

    for k, v in pairs(workspace.Casino.HackableVaults:GetChildren()) do
        if v.Name == "VaultDoorSlider" then

            HackingVault = false
            hacked = 0
            Rotate = true
            local VaultLight = v.InnerModel.Model.Light

            while hacked < 4 do
                if not HackingVault then
                    v.InnerModel.Puzzle.RequestHack:FireServer()
                    HackingVault = true
                    hacked += 1
                end
                if HackingVault then

                    if VaultLight.BrickColor == BrickColor.new("Lime green") and Rotate then
                        v.InnerModel.Puzzle.UpdateDirection:FireServer()
                        hacked += 1
                        Rotate = false
                    end
                    if VaultLight.BrickColor ~= BrickColor.new("Lime green") then
                        Rotate = true
                    end
                    wait(0.01)
                end
                if reset then
                    return
                end
            end
        end
    end

    hacking = false
end

function hack()

    if stop then
        return
    end

    if busy then
        chat("cannot hack computers right now")
        return
    end

    Car = nil
    busy = true

    for i,v in pairs(workspace.Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    if (Vector3.new(-41, 500, -4664) - Vector3.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)).magnitude > 100 then
        if (Bot.Character.HumanoidRootPart.Position - GetPos(Bot.Character.HumanoidRootPart.Position)).magnitude < (Vector3.new(-41, 500, -4664) - Bot.Character.HumanoidRootPart.Position).magnitude then
            if Car == nil then
                chat("getting car")
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
                wait(3)

                local args = {
                [1] = "Chassis",
                [2] = "Pickup"
                }
                game:GetService("ReplicatedStorage").GarageSpawnVehicle:FireServer(unpack(args))
            end

            wait(2)

            for i,v in pairs(workspace.Vehicles:GetChildren()) do
                if pcall(function() return v.Seat.PlayerName end) then
                    if v.Seat.PlayerName.Value == Bot.Name then
                        Car = v
                    end
                end
            end

            while Car == nil do
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
                wait(1)
                local amount = (Bot.Character.HumanoidRootPart.Position - GetPos(Bot.Character.HumanoidRootPart.Position)).magnitude / FlySpeed
                local MoveDist = (Bot.Character.HumanoidRootPart.Position - GetPos(Bot.Character.HumanoidRootPart.Position)) / amount
                for i = 1, amount, 1 do
                    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
                    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
                    Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
                    wait(0.01)
                    if reset then
                        return
                    end
                end
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 50, Bot.Character.HumanoidRootPart.CFrame.Z)

                wait(3)

                local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
                for i,v in pairs (UI.CircleAction.Specs) do
                    if v.Name == "Enter Driver" then
                        v:Callback(v, true)
                    end
                    if v.Name == "Hijack" then
                        v.Duration = 0;
                        v.Timed = true;
                    end
                end

                wait(0.5)
                
                for i,v in pairs(workspace.Vehicles:GetChildren()) do
                    if pcall(function() return v.Seat.PlayerName end) then
                        if v.Seat.PlayerName.Value == Bot.Name then
                            Car = v
                        end
                    end
                end

                if reset then
                    return
                end
            end
        end
    end

    chat("going to casino")
    
    if Car == nil then
        Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
        wait(1)
        while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(-41, 500, -4664)).magnitude > 30 do
            local amount = (Bot.Character.HumanoidRootPart.Position - Vector3.new(-41, 500, -4664)).magnitude / FlySpeed
            local MoveDist = (Bot.Character.HumanoidRootPart.Position - Vector3.new(-41, 500, -4664)) / amount
            for i = 1, amount, 1 do
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
                Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
                wait(0.01)

                if reset then
                    return
                end
            end
            wait()
        end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
        wait(0.1)
    else
        Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
        wait(1)
        while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(-41, 500, -4664)).magnitude > 30 do
            local amount = (Car.Engine.Position - Vector3.new(-41, 500, -4664)).magnitude / CarSpeed
            local MoveDist = (Car.Engine.Position - Vector3.new(-41, 500, -4664)) / amount
            for i = 1, amount, 1 do
                Car.Engine.CFrame = CFrame.new(Car.Engine.Position - MoveDist)
                Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
                Car.Engine.Velocity = Vector3.new(0,1.005,0)
                wait(0.01)

                if reset then
                    return
                end
            end
            wait()
        end
        Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 300, Car.Engine.CFrame.Z)
        wait(0.1)
        exitCar.OnJump()
    end

    chat("hacking computers")
    
    for k, v in pairs(game.Workspace.Casino.Computers:GetChildren()) do
        while v.Display.BrickColor ~= BrickColor.new("Institutional white") and v.Display.BrickColor ~= BrickColor.new("Lime green") do       
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(v.Display.Position)
            v.CasinoComputerHack:FireServer()
            wait(0.01)
        end
        if v.Display.BrickColor == BrickColor.new("Lime green") then
            break
        end
    end
    busy = false
end

function playerCheckWhitelist(name)
    if name == "all" then
        for k, v in pairs(game.Players:GetPlayers()) do
            local pos = table.find(ScriptStuff.whitelist, v.Name)
            if pos == nil then
                table.insert(ScriptStuff.whitelist, v.Name)
                PlayerBotCheck(v, true)
            end
        end
        chat("whitelisted all players, use >commands to see all current commands")
        return
    end

    for k, v in pairs(game.Players:GetPlayers()) do
        if name == string.lower(v.DisplayName) then
            local pos = table.find(ScriptStuff.whitelist, v.Name)
            if pos == nil then
                table.insert(ScriptStuff.whitelist, v.Name)
                chat("whitelisted "..name, player)
                chat("you can now use epic bot "..name..", use >commands to see all current commands")
                PlayerBotCheck(v, true)
            else 
                chat(name.." is already whitelisted", player)
            end
            return
        end
    end
    chat("couldnt find player in server")
end

function playerCheckRemove(name)
    if name == "all" then
        for k, v in pairs(game.Players:GetPlayers()) do
            table.clear(ScriptStuff.whitelist)
            for k, v in pairs(ScriptStuff.whitelist) do
                table.insert(ScriptStuff.whitelist, v.Name)
            end
            for k, v in pairs(GlobalWhitelist) do
                table.insert(ScriptStuff.whitelist, v.Name)
            end
        end
        chat("removed all players")
        return
    end

    if name == Bot.DisplayName then
        chat("cannot remove Bot")
        return
    end

    for k, v in pairs(game.Players:GetPlayers()) do
        if name == string.lower(v.DisplayName) then
            local pos = table.find(ScriptStuff.whitelist, v.Name)
            if pos ~= nil then
                table.remove(ScriptStuff.whitelist, pos)
                chat("removed "..name)
            else 
                chat(name.." is not whitelisted")
            end
            return
        end
    end
    chat("couldnt find player in server")
end

function PlayerBotCheck(player)
    if whitelisted(player.Name) then
        player.Chatted:Connect(function(Chat)

            if not whitelisted(player.Name) then
                return
            end

            Chat = string.lower(Chat)

            if Chat == ">uber locations" then
                if stop then
                    return
                end

                chat("uber locations: gas, airport, power, city crim, jewel, bank, msm, tomb, 1m, volcano, mansion, casino, mil base, msm cop, donut, garage, town 2, city cop, gun, [player], drop, trade, port")
                return
            end

            if Chat == ">uber gun" then
                if stop then
                    return
                end

                lift(Vector3.new(3, 500, -1760), player, "gun store")
                return
            end

            if Chat == ">uber 1m" then
                if stop then
                    return
                end

                lift(Vector3.new(474, 500, -1599), player, "1m store")
                return
            end

            if Chat == ">uber tomb" then
                if stop then
                    return
                end

                lift(Vector3.new(600, 500, -468), player, "tomb")
                return
            end

            if Chat == ">uber bank" then
                if stop then
                    return
                end

                lift(Vector3.new(-1, 500, 865), player, "bank")
                return
            end

            if Chat == ">uber jewel" then
                if stop then
                    return
                end

                lift(Vector3.new(80, 500, 1313), player, "jewlery store")
                return
            end

            if Chat == ">uber city crim" then
                if stop then
                    return
                end

                lift(Vector3.new(-300, 500, 1597), player, "city crim base")
                return
            end

            if Chat == ">uber msm" then
                if stop then
                    return
                end

                lift(Vector3.new(1119, 500, 1281), player, "museum")
                return
            end

            if Chat == ">uber power" then
                if stop then
                    return
                end

                lift(Vector3.new(72, 500, 2379), player, "power plant")
                return
            end

            if Chat == ">uber volcano" then
                if stop then
                    return
                end

                lift(Vector3.new(2275, 500, -2024), player, "volcano base")
                return
            end

            if Chat == ">uber mansion" then
                if stop then
                    return
                end

                lift(Vector3.new(3020, 500, -4524), player, "mansion")
                return
            end

            if Chat == ">uber casino" then
                if stop then
                    return
                end

                lift(Vector3.new(-220, 500, -4575), player, "casino")
                return
            end

            if Chat == ">uber prison" then
                if stop then
                    return
                end

                lift(Vector3.new(-1232, 500, -1723), player, "prison")
                return
            end

            if Chat == ">uber gas" then
                if stop then
                    return
                end

                lift(Vector3.new(-1563, 500, 708), player, "gas station")
                return
            end

            if Chat == ">uber airport" then
                if stop then
                    return
                end

                lift(Vector3.new(-1215, 500, 2930), player, "airport")
                return
            end

            if Chat == ">uber mil base" then
                if stop then
                    return
                end

                lift(Vector3.new(822, 500, -3502), player, "military base")
                return
            end

            if Chat == ">uber msm cop" then
                if stop then
                    return
                end

                lift(Vector3.new(716, 500, 1075), player, "msm cop base")
                return
            end

            if Chat == ">uber donut" then
                if stop then
                    return
                end

                lift(Vector3.new(77, 500, -1516), player, "donut")
                return
            end

            if Chat == ">uber garage" then
                if stop then
                    return
                end

                lift(Vector3.new(-394, 500, 1227), player, "garage")
                return
            end

            if Chat == ">uber town 2" then
                if stop then
                    return
                end

                lift(Vector3.new(-568, 500, -5777), player, "town 2")
                return
            end

            if Chat == ">uber city cop" then
                if stop then
                    return
                end

                lift(Vector3.new(175, 500, 1076), player, "city cop base")
                return
            end

            if Chat == ">uber drop" then
                if stop then
                    return
                end

                local pos = nil
                local ClosestDistance = 99999
                for k, v in pairs(game.Workspace:GetChildren()) do
                    if v.Name == "Drop" then
                        if (v.Root.Position - Bot.Character.HumanoidRootPart.Position).magnitude < ClosestDistance then
                            ClosestDistance = (v.Root.Position - Bot.Character.HumanoidRootPart.Position).magnitude
                            pos = Vector3.new(v.Root.Position.X, 500, v.Root.Position.Z)
                        end
                    end
                end
                if pos == nil then
                    chat("there are currently no air drops")
                else
                    lift(pos, player, "nearest air drop")
                end
                return
            end

            if Chat == ">uber trade" then
                if stop then
                    return
                end

                lift(Vector3.new(2632, 500, -3797), player, "trading boat")
                return
            end

            if Chat == ">uber port" then
                if stop then
                    return
                end

                lift(Vector3.new(-335, 500, 2028), player, "cargo port")
                return
            end

            if string.sub(Chat, 1, 6) == ">uber " then
                if stop then
                    return
                end
    
                local name = string.sub(Chat, 7, string.len(Chat))

                if name == string.lower(player.DisplayName) then
                    chat("cannot uber to yourself")
                    return
                end
                for k, v in pairs(game.Players:GetChildren()) do
                    if string.lower(v.DisplayName) == name then
                        if player.Character then
                            local pos = Vector3.new(v.Character.HumanoidRootPart.Position.X, 500, v.Character.HumanoidRootPart.Position.Z)
                            lift(pos, player, v.DisplayName)
                            return
                        else
                            chat("player body missing")
                            return
                        end
                    end
                end
                chat("couldnt find player")
            end

            if Chat == ">code" then
                if stop then
                    return
                end

                FindCode(player)
            end

            if Chat == ">hack" then
                if stop then
                    return
                end
                hack()
            end

            if Chat == ">solve" then
                if stop then
                    return
                end

                MuseumSolve(player)
            end

            if Chat == ">dynamite" then
                if stop then
                    return
                end

                if busy then
                    chat("cant place dynamite right now")
                    return
                end

                chat("placing dynamite")

                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(1093, 140, 1303)
                local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
                for i,v in pairs (UI.CircleAction.Specs) do
                    if v.Name == "Place Dynamite" then
                        v:Callback(v, true)
                    end
                end
            end

            if Chat == ">pull" then
                if stop then
                    return
                end

                if busy then
                    chat("cant pull lever right now")
                    return
                end

                busy = true

                chat("pulling lever")

                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(1062, 103, 1353)
                local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
                for i,v in pairs (UI.CircleAction.Specs) do
                    if v.Name == "Pull Lever" then
                        v:Callback(v, true)
                        busy = false
                        return
                    end
                end
                busy = false
            end

            if Chat == ">open bank" then
                if stop then
                    return
                end

                if busy then
                    chat("cant open bank door right now")
                    return
                end

                busy = true
                
                chat("opening bank door")

                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(36, 19, 908)
                wait(0.01)

                busy = false
            end

            if Chat == ">commands" then 
                if stop then
                    return
                end

                chat("commands: >uber [location], >uber locations, >code,  >hack, >solve, >dynamite, >pull, >open bank, >vaults, >kill [player], >location <player>, >kill close, >drops")
            end

            if Chat == ">vaults" then 
                if stop then
                    return
                end

                hackVaults(player)
            end

            if string.sub(Chat, 1, 6) == ">kill " then
                if stop then
                    return
                end

                kill(string.sub(Chat, 7, string.len(Chat)), player)
            end

            if string.sub(Chat, 1, 10) == ">location " then
                if stop then
                    return
                end

                GetPlayerPos(string.sub(Chat, 11, string.len(Chat)))
            end

            if Chat == ">drops" then
                if stop then
                    return
                end

                local drops = 0
                for k, v in pairs(game.Workspace:GetChildren()) do
                    if v.Name == "Drop" then
                        drops += 1
                    end
                end

                chat("there is currently "..drops.." air drops")
            end
        end)
    end
end

Bot.Chatted:Connect(function(Chat)

    Chat = string.lower(Chat)

    if string.sub(Chat, 1, 11) == ">whitelist " then
        if stop then
            return
        end
        playerCheckWhitelist(string.sub(Chat, 12, string.len(Chat)), Bot)
    end

    if string.sub(Chat, 1, 8) == ">remove " then
        if stop then
            return
        end
        playerCheckRemove(string.sub(Chat, 9, string.len(Chat)), Bot)
    end

    if Chat == ">mode" then
        if stop then
            return
        end
        private = not private
        if private then
            chat("switched to private mode")
        else 
            chat("switched to public mode")
        end
    end

    if Chat == ">safe" then
        if stop then
            return
        end
        safe = not safe
        if safe then
            chat("switched to safe mode")
        else 
            chat("switched to unsafe mode")
        end
    end

    if Chat == ">reset" then
        if stop then
            return
        end
        chat("resetting bot")
        Bot.Character.Humanoid.Health = 0
        busy = false
        reset = true

        wait(5)
        reset = false
    end

    if Chat == ">stop" then
        if stop then
            return
        end
        chat("stopping bot")
        stop = true
        reset = true
    end
end)

for k, v in pairs(game.Players:GetPlayers()) do
    PlayerBotCheck(v)
end

game.Players.PlayerAdded:Connect(function(player)
    PlayerBotCheck(player)
end)

coroutine.wrap(function()
    while not stop do
        if not busy then
            if safe then
                if Bot.Character then
                    if Bot.Character:FindFirstChild("HumanoidRootPart") then
                        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 5000, Bot.Character.HumanoidRootPart.CFrame.Z)
                        Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
                    end
                end
            end
        end
        wait(1)
    end
end)()

coroutine.wrap(function()
    while not stop do
        if safe then
            for k, v in pairs(game.Workspace.Items:GetChildren()) do
                if v.Name == "Taser" then
                    if (v.Model.Taser.Position - Bot.Character.HumanoidRootPart.Position).magnitude < 50 then
                        chat("police with taser nearby, moving bot")

                        busy = false
                        reset = true

                        for i = 1, 10, 1 do
                            exitCar.OnJump()
                            wait(0.5)
                        end

                        reset = false
                    end
                end

                if v.Name == "Handcuffs" then
                    if (v.Model.Cuffs.Position - Bot.Character.HumanoidRootPart.Position).magnitude < 50 then
                        chat("police with handcuffs nearby, moving bot")

                        busy = false
                        reset = true

                        for i = 1, 10, 1 do
                            exitCar.OnJump()
                            wait(0.5)
                        end

                        reset = false
                    end
                end
            end
            if Bot.Character.Humanoid.Health <= 50 and Bot.Character.Humanoid.Health > 0 then
                chat("low health, moving bot")

                busy = false
                reset = true
                    
                wait(5)
                reset = false
            end
        end
        wait(0.5)
    end
end)()

coroutine.wrap(function()
    while true do
        local plrUtils = game:GetService("ReplicatedStorage").Game.PlayerUtils
        local oldHasKey = require(plrUtils).hasKey
        require(plrUtils).hasKey = function() 
            return true
        end
        local Camera = workspace.CurrentCamera
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local UserInputService = game:GetService("UserInputService")
        local TweenService = game:GetService("TweenService")
        local LocalPlayer = Players.LocalPlayer
        local Holding = false
        wait(5)
    end
end)()

for i = 1, 10, 1 do
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(-41, 500, -4664)
    wait(0.1)
end

chat("started version 0.5")

return ScriptStuff
